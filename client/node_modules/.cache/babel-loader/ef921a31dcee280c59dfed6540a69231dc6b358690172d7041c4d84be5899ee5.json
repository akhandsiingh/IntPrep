{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"D:\\\\IntPrep\\\\client\\\\src\\\\pages\\\\InterviewPage.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport InterviewSetup from \"../components/interview/InterviewSetup\";\nimport InterviewSession from \"../components/interview/InterviewSession\";\nimport InterviewResults from \"../components/interview/InterviewResults\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function InterviewPage() {\n  _s();\n  const [currentStep, setCurrentStep] = useState(\"setup\"); // setup, session, results\n  const [interviewConfig, setInterviewConfig] = useState(null);\n  const [interviewData, setInterviewData] = useState(null);\n  const handleStartInterview = config => {\n    setInterviewConfig(config);\n    setCurrentStep(\"session\");\n  };\n  const handleCompleteInterview = data => {\n    setInterviewData(data);\n    setCurrentStep(\"results\");\n  };\n  const handleRestartInterview = () => {\n    setCurrentStep(\"setup\");\n    setInterviewConfig(null);\n    setInterviewData(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50\",\n    children: [currentStep === \"setup\" && /*#__PURE__*/_jsxDEV(InterviewSetup, {\n      onStart: handleStartInterview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 35\n    }, this), currentStep === \"session\" && /*#__PURE__*/_jsxDEV(InterviewSession, {\n      config: interviewConfig,\n      onComplete: handleCompleteInterview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 37\n    }, this), currentStep === \"results\" && /*#__PURE__*/_jsxDEV(InterviewResults, {\n      data: interviewData,\n      onRestart: handleRestartInterview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 37\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(InterviewPage, \"Uz/klgAZCNFxWyOiSBYC4QeYWWc=\");\n_c = InterviewPage;\nvar _c;\n$RefreshReg$(_c, \"InterviewPage\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","InterviewSetup","InterviewSession","InterviewResults","jsxDEV","_jsxDEV","InterviewPage","currentStep","setCurrentStep","interviewConfig","setInterviewConfig","interviewData","setInterviewData","handleStartInterview","config","handleCompleteInterview","data","handleRestartInterview","className","children","onStart","fileName","lineNumber","columnNumber","onComplete","onRestart","_c","$RefreshReg$"],"sources":["D:/IntPrep/client/src/pages/InterviewPage.js"],"sourcesContent":["\"use client\"\n\nimport { useState } from \"react\"\nimport InterviewSetup from \"../components/interview/InterviewSetup\"\nimport InterviewSession from \"../components/interview/InterviewSession\"\nimport InterviewResults from \"../components/interview/InterviewResults\"\n\nexport default function InterviewPage() {\n  const [currentStep, setCurrentStep] = useState(\"setup\") // setup, session, results\n  const [interviewConfig, setInterviewConfig] = useState(null)\n  const [interviewData, setInterviewData] = useState(null)\n\n  const handleStartInterview = (config) => {\n    setInterviewConfig(config)\n    setCurrentStep(\"session\")\n  }\n\n  const handleCompleteInterview = (data) => {\n    setInterviewData(data)\n    setCurrentStep(\"results\")\n  }\n\n  const handleRestartInterview = () => {\n    setCurrentStep(\"setup\")\n    setInterviewConfig(null)\n    setInterviewData(null)\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {currentStep === \"setup\" && <InterviewSetup onStart={handleStartInterview} />}\n      {currentStep === \"session\" && <InterviewSession config={interviewConfig} onComplete={handleCompleteInterview} />}\n      {currentStep === \"results\" && <InterviewResults data={interviewData} onRestart={handleRestartInterview} />}\n    </div>\n  )\n}\n"],"mappings":"AAAA,YAAY;;AAAA,IAAAA,YAAA;EAAAC,EAAA,GAAAC,YAAA;AAEZ,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,cAAc,MAAM,wCAAwC;AACnE,OAAOC,gBAAgB,MAAM,0CAA0C;AACvE,OAAOC,gBAAgB,MAAM,0CAA0C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvE,eAAe,SAASC,aAAaA,CAAA,EAAG;EAAAR,EAAA;EACtC,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,OAAO,CAAC,EAAC;EACxD,MAAM,CAACS,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAMa,oBAAoB,GAAIC,MAAM,IAAK;IACvCJ,kBAAkB,CAACI,MAAM,CAAC;IAC1BN,cAAc,CAAC,SAAS,CAAC;EAC3B,CAAC;EAED,MAAMO,uBAAuB,GAAIC,IAAI,IAAK;IACxCJ,gBAAgB,CAACI,IAAI,CAAC;IACtBR,cAAc,CAAC,SAAS,CAAC;EAC3B,CAAC;EAED,MAAMS,sBAAsB,GAAGA,CAAA,KAAM;IACnCT,cAAc,CAAC,OAAO,CAAC;IACvBE,kBAAkB,CAAC,IAAI,CAAC;IACxBE,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,oBACEP,OAAA;IAAKa,SAAS,EAAC,yBAAyB;IAAAC,QAAA,GACrCZ,WAAW,KAAK,OAAO,iBAAIF,OAAA,CAACJ,cAAc;MAACmB,OAAO,EAAEP;IAAqB;MAAAQ,QAAA,EAAAxB,YAAA;MAAAyB,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC5EhB,WAAW,KAAK,SAAS,iBAAIF,OAAA,CAACH,gBAAgB;MAACY,MAAM,EAAEL,eAAgB;MAACe,UAAU,EAAET;IAAwB;MAAAM,QAAA,EAAAxB,YAAA;MAAAyB,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC/GhB,WAAW,KAAK,SAAS,iBAAIF,OAAA,CAACF,gBAAgB;MAACa,IAAI,EAAEL,aAAc;MAACc,SAAS,EAAER;IAAuB;MAAAI,QAAA,EAAAxB,YAAA;MAAAyB,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAF,QAAA,EAAAxB,YAAA;IAAAyB,UAAA;IAAAC,YAAA;EAAA,OACvG,CAAC;AAEV;AAACzB,EAAA,CA5BuBQ,aAAa;AAAAoB,EAAA,GAAbpB,aAAa;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}