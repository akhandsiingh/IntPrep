{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"D:\\\\IntPrep\\\\client\\\\src\\\\components\\\\interview\\\\InterviewSession.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { useToast } from \"../../contexts/ToastContext\";\nimport { Clock, MessageSquare, ArrowRight, Pause, Play, Sparkles } from \"lucide-react\";\nimport axios from \"axios\";\nimport { API_BASE } from \"../../lib/config\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst formatTime = seconds => {\n  const mins = Math.floor(seconds / 60);\n  const secs = seconds % 60;\n  return `${mins}m ${secs.toString().padStart(2, \"0\")}s`;\n};\nexport default function InterviewSession({\n  config,\n  onComplete\n}) {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answer, setAnswer] = useState(\"\");\n  const [answers, setAnswers] = useState([]);\n  const [timeRemaining, setTimeRemaining] = useState(config.duration * 60);\n  const [isPaused, setIsPaused] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [interviewId, setInterviewId] = useState(null);\n  const [evaluatingAnswer, setEvaluatingAnswer] = useState(false);\n  const [questionGenerationError, setQuestionGenerationError] = useState(false);\n  const {\n    currentUser\n  } = useAuth();\n  const {\n    toast\n  } = useToast();\n  const hasInitializedForKeyRef = useRef(null);\n  const errorToastShownRef = useRef(false);\n  // Build a stable key for the current interview config\n  const configKey = `${config.role}|${config.experience}|${config.difficulty}|${config.duration}`;\n\n  // Enhanced question generation with better error handling and dynamic AI generation\n  useEffect(() => {\n    if (!(currentUser !== null && currentUser !== void 0 && currentUser.uid)) {\n      // Wait until auth is ready before initializing\n      return;\n    }\n\n    // Prevent re-initializing for the same config\n    if (hasInitializedForKeyRef.current === configKey) {\n      return;\n    }\n    hasInitializedForKeyRef.current = configKey;\n    let isMounted = true;\n    const initializeInterview = async () => {\n      try {\n        var _questionsResponse$da, _questionsResponse$da2;\n        setLoading(true);\n        setQuestionGenerationError(false);\n        const token = await currentUser.getIdToken();\n        const authHeader = {\n          Authorization: `Bearer ${token}`\n        };\n        const interviewResponse = await axios.post(`${API_BASE}/api/interviews`, {\n          ...config,\n          userId: currentUser.uid,\n          startedAt: new Date(),\n          status: \"in_progress\"\n        }, {\n          headers: authHeader,\n          timeout: 15000\n        });\n        if (!isMounted) return;\n        setInterviewId(interviewResponse.data._id);\n        const questionsResponse = await axios.post(`${API_BASE}/api/questions/generate`, {\n          role: config.role,\n          experience: config.experience,\n          difficulty: config.difficulty,\n          count: Math.max(3, Math.ceil(config.duration / 6)),\n          seed: Date.now(),\n          previousAnswers: []\n        }, {\n          headers: authHeader,\n          timeout: 20000\n        });\n        if (!isMounted) return;\n        if (((_questionsResponse$da = questionsResponse.data) === null || _questionsResponse$da === void 0 ? void 0 : (_questionsResponse$da2 = _questionsResponse$da.questions) === null || _questionsResponse$da2 === void 0 ? void 0 : _questionsResponse$da2.length) > 0) {\n          setQuestions(questionsResponse.data.questions);\n          toast.success(`Generated ${questionsResponse.data.questions.length} personalized questions!`);\n        } else {\n          throw new Error(\"No questions received from API\");\n        }\n        setLoading(false);\n      } catch (error) {\n        if (!isMounted) return;\n        setQuestionGenerationError(true);\n        const fallbackQuestions = generateFallbackQuestions(config);\n        setQuestions(fallbackQuestions);\n        if (!errorToastShownRef.current) {\n          toast.error(\"AI question generation failed. Using backup questions.\");\n          errorToastShownRef.current = true;\n        }\n        setLoading(false);\n      }\n    };\n    initializeInterview();\n    return () => {\n      isMounted = false;\n    };\n  }, [configKey, currentUser === null || currentUser === void 0 ? void 0 : currentUser.uid]);\n\n  // Enhanced fallback question generation with more variety\n  const generateFallbackQuestions = config => {\n    const baseQuestions = [`Tell me about yourself and why you're interested in the ${config.role} position.`, `What experience do you have that makes you suitable for this ${config.role} role?`, \"Describe a challenging project you worked on and how you overcame the obstacles.\", \"How do you stay updated with the latest trends and technologies in your field?\", \"Tell me about a time when you had to work under pressure. How did you handle it?\"];\n    const roleSpecificQuestions = {\n      \"Software Engineer\": [\"Explain the difference between synchronous and asynchronous programming.\", \"How do you approach debugging a complex issue in your code?\", \"Describe your experience with version control systems like Git.\", \"What's your preferred development methodology and why?\"],\n      \"Frontend Developer\": [\"How do you ensure cross-browser compatibility in your applications?\", \"Explain the concept of responsive design and how you implement it.\", \"What's your approach to optimizing web performance?\", \"How do you handle state management in complex applications?\"],\n      \"Backend Developer\": [\"How do you design scalable APIs?\", \"Explain database indexing and its importance for performance.\", \"Describe your experience with microservices architecture.\", \"How do you handle security in backend applications?\"],\n      \"Data Scientist\": [\"How do you handle missing data in datasets?\", \"Explain the bias-variance tradeoff in machine learning.\", \"Describe your approach to feature selection and engineering.\", \"How do you validate and test your machine learning models?\"]\n    };\n    const specificQuestions = roleSpecificQuestions[config.role] || [];\n    const allQuestions = [...baseQuestions, ...specificQuestions];\n\n    // Shuffle and return appropriate number of questions\n    const shuffled = allQuestions.sort(() => 0.5 - Math.random());\n    return shuffled.slice(0, Math.max(3, Math.ceil(config.duration / 6)));\n  };\n\n  // Enhanced answer handling with better AI evaluation and follow-up question generation\n  const handleNextQuestion = async () => {\n    if (!answer.trim()) {\n      toast.error(\"Please provide an answer before proceeding.\");\n      return;\n    }\n    setEvaluatingAnswer(true);\n    try {\n      const token = await currentUser.getIdToken();\n      const authHeader = {\n        Authorization: `Bearer ${token}`\n      };\n      const evaluationResponse = await axios.post(`${API_BASE}/api/questions/evaluate`, {\n        question: questions[currentQuestionIndex],\n        answer: answer.trim(),\n        role: config.role,\n        experience: config.experience\n      }, {\n        headers: authHeader,\n        timeout: 15000\n      });\n      const evaluation = evaluationResponse.data;\n      const newAnswer = {\n        question: questions[currentQuestionIndex],\n        answer: answer.trim(),\n        timeSpent: 0,\n        score: evaluation.score || 7,\n        feedback: evaluation.feedback || \"Good answer provided.\",\n        strengths: evaluation.strengths || [\"Answer provided\"],\n        improvements: evaluation.improvements || [\"Consider adding more detail\"],\n        timestamp: new Date()\n      };\n      const updatedAnswers = [...answers, newAnswer];\n      setAnswers(updatedAnswers);\n      if (currentQuestionIndex < questions.length - 1) {\n        if (evaluation.score >= 8 && updatedAnswers.length < Math.ceil(config.duration / 4)) {\n          try {\n            const followUpResponse = await axios.post(`${API_BASE}/api/questions/generate`, {\n              role: config.role,\n              experience: config.experience,\n              difficulty: config.difficulty,\n              count: 1,\n              previousAnswers: updatedAnswers.map(a => ({\n                question: a.question,\n                answer: a.answer,\n                score: a.score\n              })),\n              generateFollowUp: true\n            }, {\n              headers: authHeader,\n              timeout: 15000\n            });\n            if (followUpResponse.data.questions && followUpResponse.data.questions.length > 0) {\n              const newQuestions = [...questions];\n              newQuestions.splice(currentQuestionIndex + 1, 0, followUpResponse.data.questions[0]);\n              setQuestions(newQuestions);\n            }\n          } catch (followUpError) {\n            // intentionally silent, continue with existing questions\n          }\n        }\n        setCurrentQuestionIndex(currentQuestionIndex + 1);\n        setAnswer(\"\");\n      } else {\n        await handleCompleteInterview(updatedAnswers);\n      }\n    } catch (error) {\n      toast.error(\"Failed to evaluate answer, but continuing interview.\");\n      const newAnswer = {\n        question: questions[currentQuestionIndex],\n        answer: answer.trim(),\n        timeSpent: 0,\n        score: 7,\n        // Default score\n        feedback: \"Answer recorded successfully.\",\n        strengths: [\"Answer provided\"],\n        improvements: [\"Consider adding more specific examples\"],\n        timestamp: new Date()\n      };\n      const updatedAnswers = [...answers, newAnswer];\n      setAnswers(updatedAnswers);\n      setAnswer(\"\");\n      if (currentQuestionIndex < questions.length - 1) {\n        setCurrentQuestionIndex(currentQuestionIndex + 1);\n      } else {\n        await handleCompleteInterview(updatedAnswers);\n      }\n    } finally {\n      setEvaluatingAnswer(false);\n    }\n  };\n\n  // Enhanced interview completion with comprehensive AI feedback\n  const handleCompleteInterview = async (finalAnswers = answers) => {\n    try {\n      const averageScore = finalAnswers.length > 0 ? finalAnswers.reduce((sum, a) => sum + (a.score || 7), 0) / finalAnswers.length : 7;\n      const token = await currentUser.getIdToken();\n      const authHeader = {\n        Authorization: `Bearer ${token}`\n      };\n      const feedbackResponse = await axios.post(`${API_BASE}/api/questions/feedback`, {\n        questions: finalAnswers.map(a => a.question),\n        answers: finalAnswers.map(a => a.answer),\n        role: config.role,\n        experience: config.experience,\n        overallScore: averageScore,\n        individualScores: finalAnswers.map(a => a.score || 7)\n      }, {\n        headers: authHeader,\n        timeout: 20000\n      });\n      const comprehensiveFeedback = feedbackResponse.data;\n      const interviewData = {\n        questions: finalAnswers,\n        status: \"completed\",\n        completedAt: new Date(),\n        overallScore: averageScore,\n        feedback: comprehensiveFeedback,\n        timeSpent: config.duration * 60 - timeRemaining,\n        config: config\n      };\n      if (interviewId) {\n        await axios.put(`${API_BASE}/api/interviews/${interviewId}`, interviewData, {\n          headers: authHeader,\n          timeout: 15000\n        });\n      }\n      toast.success(\"Interview completed successfully!\");\n      onComplete({\n        ...config,\n        ...interviewData\n      });\n    } catch (error) {\n      toast.error(\"Failed to save interview results, but your answers were recorded.\");\n      onComplete({\n        ...config,\n        questions: finalAnswers,\n        status: \"completed\",\n        overallScore: finalAnswers.length > 0 ? finalAnswers.reduce((sum, a) => sum + (a.score || 7), 0) / finalAnswers.length : 7,\n        timeSpent: config.duration * 60 - timeRemaining\n      });\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold mb-2\",\n          children: \"Generating Your Personalized Interview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 mb-2\",\n          children: [\"Our AI is creating unique questions tailored for your \", config.role, \" interview...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-500\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Experience Level: \", config.experience]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Difficulty: \", config.difficulty]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Duration: \", config.duration, \" minutes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }, this);\n  }\n  if (questions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-red-500 text-6xl mb-4\",\n          children: \"\\u26A0\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold mb-2\",\n          children: \"Unable to Generate Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 mb-4\",\n          children: questionGenerationError ? \"AI question generation failed. Please check your internet connection and try again.\" : \"No questions were generated. Please try again.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => window.location.reload(),\n          className: \"bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 px-6 rounded-lg transition-colors\",\n          children: \"Try Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto px-4 py-8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-4xl mx-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-lg shadow-sm p-6 mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center gap-2 text-blue-600\",\n                children: [/*#__PURE__*/_jsxDEV(Clock, {\n                  className: \"w-5 h-5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-semibold text-lg\",\n                  children: formatTime(timeRemaining)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 373,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setIsPaused(!isPaused),\n                className: \"flex items-center gap-2 px-3 py-1 text-sm bg-gray-100 hover:bg-gray-200 rounded-md transition-colors\",\n                children: [isPaused ? /*#__PURE__*/_jsxDEV(Play, {\n                  className: \"w-4 h-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 31\n                }, this) : /*#__PURE__*/_jsxDEV(Pause, {\n                  className: \"w-4 h-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 62\n                }, this), isPaused ? \"Resume\" : \"Pause\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center gap-2 text-purple-600 text-sm\",\n                children: [/*#__PURE__*/_jsxDEV(Sparkles, {\n                  className: \"w-4 h-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"AI-Powered\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600\",\n              children: [\"Question \", currentQuestionIndex + 1, \" of \", questions.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-full bg-gray-200 rounded-full h-2\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-blue-600 h-2 rounded-full transition-all duration-300\",\n                style: {\n                  width: `${(currentQuestionIndex + 1) / questions.length * 100}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-lg shadow-sm p-8 mb-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-start gap-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-shrink-0\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-10 h-10 bg-blue-100 rounded-full flex items-center justify-center\",\n                children: /*#__PURE__*/_jsxDEV(MessageSquare, {\n                  className: \"w-5 h-5 text-blue-600\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 408,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-xl font-semibold text-gray-900 mb-4\",\n                children: questions[currentQuestionIndex]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: answer,\n                onChange: e => setAnswer(e.target.value),\n                placeholder: \"Type your answer here... Be specific and provide examples when possible.\",\n                className: \"w-full h-40 px-4 py-3 border border-gray-300 rounded-lg resize-none focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\",\n                disabled: isPaused || evaluatingAnswer\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between items-center mt-2 text-sm text-gray-500\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [answer.length, \" characters\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"\\uD83D\\uDCA1 Tip: Include specific examples and quantify your achievements\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 422,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-600\",\n            children: answers.length > 0 && `${answers.length} question${answers.length > 1 ? \"s\" : \"\"} completed`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleCompleteInterview(),\n              className: \"px-4 py-2 text-gray-600 hover:text-gray-800 transition-colors\",\n              disabled: evaluatingAnswer,\n              children: \"End Interview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleNextQuestion,\n              disabled: !answer.trim() || isPaused || evaluatingAnswer,\n              className: \"flex items-center gap-2 bg-blue-600 hover:bg-blue-700 disabled:bg-gray-300 text-white font-semibold py-2 px-6 rounded-lg transition-colors\",\n              children: evaluatingAnswer ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"animate-spin rounded-full h-4 w-4 border-b-2 border-white\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 448,\n                  columnNumber: 21\n                }, this), \"Evaluating with AI...\"]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [currentQuestionIndex < questions.length - 1 ? \"Next Question\" : \"Complete Interview\", /*#__PURE__*/_jsxDEV(ArrowRight, {\n                  className: \"w-4 h-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 454,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 364,\n    columnNumber: 5\n  }, this);\n}\n_s(InterviewSession, \"jBSuwx2d30w4U3ABKGtQ5bEltAE=\", false, function () {\n  return [useAuth, useToast];\n});\n_c = InterviewSession;\nvar _c;\n$RefreshReg$(_c, \"InterviewSession\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useEffect","useRef","useAuth","useToast","Clock","MessageSquare","ArrowRight","Pause","Play","Sparkles","axios","API_BASE","jsxDEV","_jsxDEV","Fragment","_Fragment","formatTime","seconds","mins","Math","floor","secs","toString","padStart","InterviewSession","config","onComplete","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","answer","setAnswer","answers","setAnswers","timeRemaining","setTimeRemaining","duration","isPaused","setIsPaused","loading","setLoading","interviewId","setInterviewId","evaluatingAnswer","setEvaluatingAnswer","questionGenerationError","setQuestionGenerationError","currentUser","toast","hasInitializedForKeyRef","errorToastShownRef","configKey","role","experience","difficulty","uid","current","isMounted","initializeInterview","_questionsResponse$da","_questionsResponse$da2","token","getIdToken","authHeader","Authorization","interviewResponse","post","userId","startedAt","Date","status","headers","timeout","data","_id","questionsResponse","count","max","ceil","seed","now","previousAnswers","length","success","Error","error","fallbackQuestions","generateFallbackQuestions","baseQuestions","roleSpecificQuestions","specificQuestions","allQuestions","shuffled","sort","random","slice","handleNextQuestion","trim","evaluationResponse","question","evaluation","newAnswer","timeSpent","score","feedback","strengths","improvements","timestamp","updatedAnswers","followUpResponse","map","a","generateFollowUp","newQuestions","splice","followUpError","handleCompleteInterview","finalAnswers","averageScore","reduce","sum","feedbackResponse","overallScore","individualScores","comprehensiveFeedback","interviewData","completedAt","put","className","children","fileName","lineNumber","columnNumber","onClick","window","location","reload","style","width","value","onChange","e","target","placeholder","disabled","_c","$RefreshReg$"],"sources":["D:/IntPrep/client/src/components/interview/InterviewSession.js"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect, useRef } from \"react\"\nimport { useAuth } from \"../../contexts/AuthContext\"\nimport { useToast } from \"../../contexts/ToastContext\"\nimport { Clock, MessageSquare, ArrowRight, Pause, Play, Sparkles } from \"lucide-react\"\nimport axios from \"axios\"\nimport { API_BASE } from \"../../lib/config\"\n\nconst formatTime = (seconds) => {\n  const mins = Math.floor(seconds / 60)\n  const secs = seconds % 60\n  return `${mins}m ${secs.toString().padStart(2, \"0\")}s`\n}\n\nexport default function InterviewSession({ config, onComplete }) {\n  const [questions, setQuestions] = useState([])\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0)\n  const [answer, setAnswer] = useState(\"\")\n  const [answers, setAnswers] = useState([])\n  const [timeRemaining, setTimeRemaining] = useState(config.duration * 60)\n  const [isPaused, setIsPaused] = useState(false)\n  const [loading, setLoading] = useState(true)\n  const [interviewId, setInterviewId] = useState(null)\n  const [evaluatingAnswer, setEvaluatingAnswer] = useState(false)\n  const [questionGenerationError, setQuestionGenerationError] = useState(false)\n\n  const { currentUser } = useAuth()\n  const { toast } = useToast()\n\n  const hasInitializedForKeyRef = useRef(null)\n  const errorToastShownRef = useRef(false)\n  // Build a stable key for the current interview config\n  const configKey = `${config.role}|${config.experience}|${config.difficulty}|${config.duration}`\n\n  // Enhanced question generation with better error handling and dynamic AI generation\n  useEffect(() => {\n    if (!currentUser?.uid) {\n      // Wait until auth is ready before initializing\n      return\n    }\n\n    // Prevent re-initializing for the same config\n    if (hasInitializedForKeyRef.current === configKey) {\n      return\n    }\n    hasInitializedForKeyRef.current = configKey\n\n    let isMounted = true\n\n    const initializeInterview = async () => {\n      try {\n        setLoading(true)\n        setQuestionGenerationError(false)\n\n        const token = await currentUser.getIdToken()\n        const authHeader = { Authorization: `Bearer ${token}` }\n\n        const interviewResponse = await axios.post(\n          `${API_BASE}/api/interviews`,\n          {\n            ...config,\n            userId: currentUser.uid,\n            startedAt: new Date(),\n            status: \"in_progress\",\n          },\n          { headers: authHeader, timeout: 15000 },\n        )\n\n        if (!isMounted) return\n        setInterviewId(interviewResponse.data._id)\n\n        const questionsResponse = await axios.post(\n          `${API_BASE}/api/questions/generate`,\n          {\n            role: config.role,\n            experience: config.experience,\n            difficulty: config.difficulty,\n            count: Math.max(3, Math.ceil(config.duration / 6)),\n            seed: Date.now(),\n            previousAnswers: [],\n          },\n          { headers: authHeader, timeout: 20000 },\n        )\n\n        if (!isMounted) return\n\n        if (questionsResponse.data?.questions?.length > 0) {\n          setQuestions(questionsResponse.data.questions)\n          toast.success(`Generated ${questionsResponse.data.questions.length} personalized questions!`)\n        } else {\n          throw new Error(\"No questions received from API\")\n        }\n\n        setLoading(false)\n      } catch (error) {\n        if (!isMounted) return\n        setQuestionGenerationError(true)\n        const fallbackQuestions = generateFallbackQuestions(config)\n        setQuestions(fallbackQuestions)\n        if (!errorToastShownRef.current) {\n          toast.error(\"AI question generation failed. Using backup questions.\")\n          errorToastShownRef.current = true\n        }\n        setLoading(false)\n      }\n    }\n\n    initializeInterview()\n\n    return () => {\n      isMounted = false\n    }\n  }, [configKey, currentUser?.uid])\n\n  // Enhanced fallback question generation with more variety\n  const generateFallbackQuestions = (config) => {\n    const baseQuestions = [\n      `Tell me about yourself and why you're interested in the ${config.role} position.`,\n      `What experience do you have that makes you suitable for this ${config.role} role?`,\n      \"Describe a challenging project you worked on and how you overcame the obstacles.\",\n      \"How do you stay updated with the latest trends and technologies in your field?\",\n      \"Tell me about a time when you had to work under pressure. How did you handle it?\",\n    ]\n\n    const roleSpecificQuestions = {\n      \"Software Engineer\": [\n        \"Explain the difference between synchronous and asynchronous programming.\",\n        \"How do you approach debugging a complex issue in your code?\",\n        \"Describe your experience with version control systems like Git.\",\n        \"What's your preferred development methodology and why?\",\n      ],\n      \"Frontend Developer\": [\n        \"How do you ensure cross-browser compatibility in your applications?\",\n        \"Explain the concept of responsive design and how you implement it.\",\n        \"What's your approach to optimizing web performance?\",\n        \"How do you handle state management in complex applications?\",\n      ],\n      \"Backend Developer\": [\n        \"How do you design scalable APIs?\",\n        \"Explain database indexing and its importance for performance.\",\n        \"Describe your experience with microservices architecture.\",\n        \"How do you handle security in backend applications?\",\n      ],\n      \"Data Scientist\": [\n        \"How do you handle missing data in datasets?\",\n        \"Explain the bias-variance tradeoff in machine learning.\",\n        \"Describe your approach to feature selection and engineering.\",\n        \"How do you validate and test your machine learning models?\",\n      ],\n    }\n\n    const specificQuestions = roleSpecificQuestions[config.role] || []\n    const allQuestions = [...baseQuestions, ...specificQuestions]\n\n    // Shuffle and return appropriate number of questions\n    const shuffled = allQuestions.sort(() => 0.5 - Math.random())\n    return shuffled.slice(0, Math.max(3, Math.ceil(config.duration / 6)))\n  }\n\n  // Enhanced answer handling with better AI evaluation and follow-up question generation\n  const handleNextQuestion = async () => {\n    if (!answer.trim()) {\n      toast.error(\"Please provide an answer before proceeding.\")\n      return\n    }\n\n    setEvaluatingAnswer(true)\n\n    try {\n      const token = await currentUser.getIdToken()\n      const authHeader = { Authorization: `Bearer ${token}` }\n\n      const evaluationResponse = await axios.post(\n        `${API_BASE}/api/questions/evaluate`,\n        {\n          question: questions[currentQuestionIndex],\n          answer: answer.trim(),\n          role: config.role,\n          experience: config.experience,\n        },\n        { headers: authHeader, timeout: 15000 },\n      )\n\n      const evaluation = evaluationResponse.data\n      const newAnswer = {\n        question: questions[currentQuestionIndex],\n        answer: answer.trim(),\n        timeSpent: 0,\n        score: evaluation.score || 7,\n        feedback: evaluation.feedback || \"Good answer provided.\",\n        strengths: evaluation.strengths || [\"Answer provided\"],\n        improvements: evaluation.improvements || [\"Consider adding more detail\"],\n        timestamp: new Date(),\n      }\n\n      const updatedAnswers = [...answers, newAnswer]\n      setAnswers(updatedAnswers)\n\n      if (currentQuestionIndex < questions.length - 1) {\n        if (evaluation.score >= 8 && updatedAnswers.length < Math.ceil(config.duration / 4)) {\n          try {\n            const followUpResponse = await axios.post(\n              `${API_BASE}/api/questions/generate`,\n              {\n                role: config.role,\n                experience: config.experience,\n                difficulty: config.difficulty,\n                count: 1,\n                previousAnswers: updatedAnswers.map((a) => ({\n                  question: a.question,\n                  answer: a.answer,\n                  score: a.score,\n                })),\n                generateFollowUp: true,\n              },\n              { headers: authHeader, timeout: 15000 },\n            )\n            if (followUpResponse.data.questions && followUpResponse.data.questions.length > 0) {\n              const newQuestions = [...questions]\n              newQuestions.splice(currentQuestionIndex + 1, 0, followUpResponse.data.questions[0])\n              setQuestions(newQuestions)\n            }\n          } catch (followUpError) {\n            // intentionally silent, continue with existing questions\n          }\n        }\n        setCurrentQuestionIndex(currentQuestionIndex + 1)\n        setAnswer(\"\")\n      } else {\n        await handleCompleteInterview(updatedAnswers)\n      }\n    } catch (error) {\n      toast.error(\"Failed to evaluate answer, but continuing interview.\")\n\n      const newAnswer = {\n        question: questions[currentQuestionIndex],\n        answer: answer.trim(),\n        timeSpent: 0,\n        score: 7, // Default score\n        feedback: \"Answer recorded successfully.\",\n        strengths: [\"Answer provided\"],\n        improvements: [\"Consider adding more specific examples\"],\n        timestamp: new Date(),\n      }\n\n      const updatedAnswers = [...answers, newAnswer]\n      setAnswers(updatedAnswers)\n      setAnswer(\"\")\n\n      if (currentQuestionIndex < questions.length - 1) {\n        setCurrentQuestionIndex(currentQuestionIndex + 1)\n      } else {\n        await handleCompleteInterview(updatedAnswers)\n      }\n    } finally {\n      setEvaluatingAnswer(false)\n    }\n  }\n\n  // Enhanced interview completion with comprehensive AI feedback\n  const handleCompleteInterview = async (finalAnswers = answers) => {\n    try {\n      const averageScore =\n        finalAnswers.length > 0 ? finalAnswers.reduce((sum, a) => sum + (a.score || 7), 0) / finalAnswers.length : 7\n\n      const token = await currentUser.getIdToken()\n      const authHeader = { Authorization: `Bearer ${token}` }\n\n      const feedbackResponse = await axios.post(\n        `${API_BASE}/api/questions/feedback`,\n        {\n          questions: finalAnswers.map((a) => a.question),\n          answers: finalAnswers.map((a) => a.answer),\n          role: config.role,\n          experience: config.experience,\n          overallScore: averageScore,\n          individualScores: finalAnswers.map((a) => a.score || 7),\n        },\n        { headers: authHeader, timeout: 20000 },\n      )\n\n      const comprehensiveFeedback = feedbackResponse.data\n\n      const interviewData = {\n        questions: finalAnswers,\n        status: \"completed\",\n        completedAt: new Date(),\n        overallScore: averageScore,\n        feedback: comprehensiveFeedback,\n        timeSpent: config.duration * 60 - timeRemaining,\n        config: config,\n      }\n\n      if (interviewId) {\n        await axios.put(`${API_BASE}/api/interviews/${interviewId}`, interviewData, {\n          headers: authHeader,\n          timeout: 15000,\n        })\n      }\n\n      toast.success(\"Interview completed successfully!\")\n\n      onComplete({\n        ...config,\n        ...interviewData,\n      })\n    } catch (error) {\n      toast.error(\"Failed to save interview results, but your answers were recorded.\")\n\n      onComplete({\n        ...config,\n        questions: finalAnswers,\n        status: \"completed\",\n        overallScore:\n          finalAnswers.length > 0 ? finalAnswers.reduce((sum, a) => sum + (a.score || 7), 0) / finalAnswers.length : 7,\n        timeSpent: config.duration * 60 - timeRemaining,\n      })\n    }\n  }\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n          <h3 className=\"text-lg font-semibold mb-2\">Generating Your Personalized Interview</h3>\n          <p className=\"text-gray-600 mb-2\">\n            Our AI is creating unique questions tailored for your {config.role} interview...\n          </p>\n          <div className=\"text-sm text-gray-500\">\n            <p>Experience Level: {config.experience}</p>\n            <p>Difficulty: {config.difficulty}</p>\n            <p>Duration: {config.duration} minutes</p>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  if (questions.length === 0) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"text-red-500 text-6xl mb-4\">⚠️</div>\n          <h3 className=\"text-lg font-semibold mb-2\">Unable to Generate Questions</h3>\n          <p className=\"text-gray-600 mb-4\">\n            {questionGenerationError\n              ? \"AI question generation failed. Please check your internet connection and try again.\"\n              : \"No questions were generated. Please try again.\"}\n          </p>\n          <button\n            onClick={() => window.location.reload()}\n            className=\"bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 px-6 rounded-lg transition-colors\"\n          >\n            Try Again\n          </button>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"max-w-4xl mx-auto\">\n          {/* Header */}\n          <div className=\"bg-white rounded-lg shadow-sm p-6 mb-6\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center gap-4\">\n                <div className=\"flex items-center gap-2 text-blue-600\">\n                  <Clock className=\"w-5 h-5\" />\n                  <span className=\"font-semibold text-lg\">{formatTime(timeRemaining)}</span>\n                </div>\n                <button\n                  onClick={() => setIsPaused(!isPaused)}\n                  className=\"flex items-center gap-2 px-3 py-1 text-sm bg-gray-100 hover:bg-gray-200 rounded-md transition-colors\"\n                >\n                  {isPaused ? <Play className=\"w-4 h-4\" /> : <Pause className=\"w-4 h-4\" />}\n                  {isPaused ? \"Resume\" : \"Pause\"}\n                </button>\n                <div className=\"flex items-center gap-2 text-purple-600 text-sm\">\n                  <Sparkles className=\"w-4 h-4\" />\n                  <span>AI-Powered</span>\n                </div>\n              </div>\n              <div className=\"text-sm text-gray-600\">\n                Question {currentQuestionIndex + 1} of {questions.length}\n              </div>\n            </div>\n\n            {/* Progress bar */}\n            <div className=\"mt-4\">\n              <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                <div\n                  className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\n                  style={{ width: `${((currentQuestionIndex + 1) / questions.length) * 100}%` }}\n                ></div>\n              </div>\n            </div>\n          </div>\n\n          {/* Question */}\n          <div className=\"bg-white rounded-lg shadow-sm p-8 mb-6\">\n            <div className=\"flex items-start gap-4\">\n              <div className=\"flex-shrink-0\">\n                <div className=\"w-10 h-10 bg-blue-100 rounded-full flex items-center justify-center\">\n                  <MessageSquare className=\"w-5 h-5 text-blue-600\" />\n                </div>\n              </div>\n              <div className=\"flex-1\">\n                <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">{questions[currentQuestionIndex]}</h2>\n                <textarea\n                  value={answer}\n                  onChange={(e) => setAnswer(e.target.value)}\n                  placeholder=\"Type your answer here... Be specific and provide examples when possible.\"\n                  className=\"w-full h-40 px-4 py-3 border border-gray-300 rounded-lg resize-none focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  disabled={isPaused || evaluatingAnswer}\n                />\n                <div className=\"flex justify-between items-center mt-2 text-sm text-gray-500\">\n                  <span>{answer.length} characters</span>\n                  <span>💡 Tip: Include specific examples and quantify your achievements</span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Controls */}\n          <div className=\"flex justify-between items-center\">\n            <div className=\"text-sm text-gray-600\">\n              {answers.length > 0 && `${answers.length} question${answers.length > 1 ? \"s\" : \"\"} completed`}\n            </div>\n            <div className=\"flex gap-3\">\n              <button\n                onClick={() => handleCompleteInterview()}\n                className=\"px-4 py-2 text-gray-600 hover:text-gray-800 transition-colors\"\n                disabled={evaluatingAnswer}\n              >\n                End Interview\n              </button>\n              <button\n                onClick={handleNextQuestion}\n                disabled={!answer.trim() || isPaused || evaluatingAnswer}\n                className=\"flex items-center gap-2 bg-blue-600 hover:bg-blue-700 disabled:bg-gray-300 text-white font-semibold py-2 px-6 rounded-lg transition-colors\"\n              >\n                {evaluatingAnswer ? (\n                  <>\n                    <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white\"></div>\n                    Evaluating with AI...\n                  </>\n                ) : (\n                  <>\n                    {currentQuestionIndex < questions.length - 1 ? \"Next Question\" : \"Complete Interview\"}\n                    <ArrowRight className=\"w-4 h-4\" />\n                  </>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}